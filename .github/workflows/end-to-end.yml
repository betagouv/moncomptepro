name: End-to-end tests

on:
  push:
  workflow_run:
    workflows:
      - Docker Image
    types:
      - completed

jobs:
  test:
    strategy:
      matrix:
        e2e_test:
          # - join_collectivite_territoriale_official_contact_domain
          # - join_org_with_verified_domain
          # - join_org_with_trackdechets_domain
          # - join_with_code_sent_to_official_contact_email
          # - join_with_code_sent_to_official_educ_nat_contact_email
          # - join_with_official_contact_email
          # - join_with_sponsorship
          # - signin_from_agentconnect_client
          - signin_from_legacy_client
          # - signin_from_standard_client
          # - signin_with_email_verification_renewal
          # - signin_with_magic_link
          # - signup_entreprise_unipersonnelle
          # - redirect_after_session_expiration
          # - reset_password
          # - join_must_confirm
    runs-on: ubuntu-20.04
    # services:
    #   moncomptepro-standard-client:
    #     image: ghcr.io/betagouv/moncomptepro-test-client
    #     ports:
    #       - 4000:3000
    #     env:
    #       SITE_TITLE: moncomptepro-standard-client
    #       HOST: http://localhost:4000
    #       MCP_CLIENT_ID: standard_client_id
    #       MCP_CLIENT_SECRET: standard_client_secret
    #       MCP_PROVIDER: ${{ env.MONCOMPTEPRO_HOST }}
    #       MCP_SCOPES: openid email profile organization
    #       STYLESHEET_URL: ""
    #   moncomptepro-agentconnect-client:
    #     image: ghcr.io/betagouv/moncomptepro-test-client
    #     ports:
    #       - 4001:3000
    #     env:
    #       SITE_TITLE: moncomptepro-agentconnect-client
    #       HOST: http://localhost:4001
    #       MCP_CLIENT_ID: agentconnect_client_id
    #       MCP_CLIENT_SECRET: agentconnect_client_secret
    #       MCP_PROVIDER: ${{ env.MONCOMPTEPRO_HOST }}
    #       MCP_SCOPES: openid uid given_name usual_name email siren siret organizational_unit belonging_population phone chorusdt
    #       MCP_ID_TOKEN_SIGNED_RESPONSE_ALG: ES256
    #       MCP_USERINFO_SIGNED_RESPONSE_ALG: ES256
    #       STYLESHEET_URL: ""
    #       LOGIN_HINT: unused1@yopmail.com
    #   moncomptepro-legacy-client:
    #     image: ghcr.io/betagouv/moncomptepro-test-client
    #     ports:
    #       - 4002:3000
    #     env:
    #       SITE_TITLE: moncomptepro-legacy-client
    #       HOST: http://localhost:4002
    #       MCP_CLIENT_ID: legacy_client_id
    #       MCP_CLIENT_SECRET: legacy_client_secret
    #       MCP_PROVIDER: ${{ env.MONCOMPTEPRO_HOST }}
    #       MCP_SCOPES: openid email profile phone organizations
    #       STYLESHEET_URL: ""
    #   redis:
    #     image: redis:7.0
    #     ports:
    #       - 6379:6379
    #   postgres:
    #     image: postgres:14.1
    #     env:
    #       POSTGRES_USER: ${{ env.PGUSER }}
    #       POSTGRES_PASSWORD: ${{ env.PGPASSWORD }}
    #       POSTGRES_DB: ${{ env.PGDATABASE }}
    #     ports:
    #       - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: "npm"
          node-version-file: package.json
      - run: npm ci --include=dev
      - run: |
          mv .env.sample .env
          echo "BREVO_API_KEY=${{ secrets.BREVO_API_KEY }}" >> .env
          echo "CYPRESS_MAILSLURP_API_KEY=${{ secrets.MAILSLURP_API_KEY }}" >> .env
          echo "INSEE_CONSUMER_KEY=${{ secrets.INSEE_CONSUMER_KEY }}" >> .env
          echo "INSEE_CONSUMER_SECRET=${{ secrets.INSEE_CONSUMER_SECRET }}" >> .env
          echo "MODERATION_TAG=github-action-e2e-test" >> .env
          echo "ZAMMAD_TOKEN=${{ secrets.ZAMMAD_TOKEN }}" >> .env
          echo "ZAMMAD_URL=${{ secrets.ZAMMAD_URL }}" >> .env
      - run: docker compose --project-directory cypress/e2e/${{ matrix.e2e_test }} pull
      - run: docker compose --project-directory cypress/e2e/${{ matrix.e2e_test }} build moncomptepro
      # - run: docker compose --project-directory cypress/e2e/signin_from_legacy_client logs --follow migrated-db
      # - run: docker compose --project-directory cypress/e2e/signin_from_legacy_client restart moncomptepro
      # - run: docker compose --project-directory cypress/e2e/signin_from_legacy_client logs moncomptepro
      # - name: Dotenv Action
      #   uses: falti/dotenv-action@v1.1.1
      #   with:
      #     path: cypress/env/${{ matrix.e2e_test }}.conf
      #     export-variables: true
      #     keys-case: bypass
      - name: Cypress run
        uses: cypress-io/github-action@v6.6.1
        with:
          # wait-on: http://app.moncomptepro.localhost
          # build: npm run build
          # start: npm start
          install: false
          spec: cypress/e2e/${{ matrix.e2e_test }}/index.cy.js
        env:
          NODE_ENV: production
      - run: npm run delete-database
      # Store tests runs in case of failure
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-${{ matrix.e2e_test }}-screenshots
          path: cypress/screenshots
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-${{ matrix.e2e_test }}-videos
          path: cypress/videos
