name: End-to-end tests

on:
  push:
  workflow_run:
    workflows:
      - Docker Image
    types:
      - completed

env:
  CYPRESS_MAILSLURP_API_KEY: ${{ secrets.MAILSLURP_API_KEY }}

jobs:
  test:
    strategy:
      matrix:
        e2e_test:
          - join_collectivite_territoriale_official_contact_domain
          - join_org_with_verified_domain
          - join_org_with_trackdechets_domain
          - join_with_code_sent_to_official_contact_email
          - join_with_code_sent_to_official_educ_nat_contact_email
          - join_with_official_contact_email
          - join_with_sponsorship
          - signin_from_agentconnect_client
          - signin_from_legacy_client
          - signin_from_standard_client
          - signin_with_email_verification_renewal
          - signin_with_magic_link
          - signup_entreprise_unipersonnelle
          - redirect_after_session_expiration
          - reset_password
          - join_must_confirm
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: "npm"
          node-version-file: package.json
      - run: npm ci --include=dev
      - run: |
          mv .env.sample .env
          echo "BREVO_API_KEY=${{ secrets.BREVO_API_KEY }}" >> .env
          echo "INSEE_CONSUMER_KEY=${{ secrets.INSEE_CONSUMER_KEY }}" >> .env
          echo "INSEE_CONSUMER_SECRET=${{ secrets.INSEE_CONSUMER_SECRET }}" >> .env
          echo "MODERATION_TAG=github-action-e2e-test" >> .env
          echo "ZAMMAD_TOKEN=${{ secrets.ZAMMAD_TOKEN }}" >> .env
          echo "ZAMMAD_URL=${{ secrets.ZAMMAD_URL }}" >> .env

      # NOTE(douglasduteil): Prepare the end-to-end test environment
      # The following docker compose lines ensure that the testing environment
      # is already hot before running the tests
      - run: docker compose --project-directory cypress/e2e/${{ matrix.e2e_test }} pull
      - run: docker compose --project-directory cypress/e2e/${{ matrix.e2e_test }} build moncomptepro
      - run: docker compose --project-directory cypress/e2e/${{ matrix.e2e_test }} up --build --detach

      - name: Cypress run
        uses: cypress-io/github-action@v6.6.1
        with:
          install: false
          spec: cypress/e2e/${{ matrix.e2e_test }}/${{ matrix.e2e_test }}.cy.js

      # Store tests runs in case of failure
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-${{ matrix.e2e_test }}-screenshots
          path: cypress/screenshots
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-${{ matrix.e2e_test }}-videos
          path: cypress/videos
